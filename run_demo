#!/usr/bin/env bash
TARGET=$1
USAGE="$0 <target(mppa, cpu)> <generated(mppa) or yaml file(cpu) path> <source image or video>"

# shellcheck disable=SC2120
run_without_L2cache() {
    echo "running without L2 cache"
    POCL_MPPA_FIRMWARE_NAME=ocl_fw_l1.elf python utils/kann_video_demo.py \
       --binaries-dir=$KANN_BIN_DIR/ \
       --kernel-binaries-dir=$KANN_POCL_DIR/ \
       $GENERATED_DIR $SOURCE_PATH "${@}" || return 1
}

# shellcheck disable=SC2120
run_with_L2cache() {
    echo "running with L2 cache"
    python utils/kann_video_demo.py \
       --binaries-dir=$KANN_BIN_DIR/ \
       --kernel-binaries-dir=$KANN_POCL_DIR/ \
       $GENERATED_DIR $SOURCE_PATH "${@}" || return 1
}

for i in "${@}"; do
    if [[ $i =~ "help" ]]; then
        echo ""
        echo "  Usage: ${USAGE}"
        echo ""
        echo "*** CPU ***"
        echo "  if target is \"cpu\", the onnx or pb file pointed by"
        echo "  the yaml configuration file will be used with "
        echo "  pre and post processing script file attached"
        echo ""
        echo "*** MPPA(R) ***"
        echo "  if target is \"mppa\", the script kann_video_demo.py will be used"
        echo "  Please use L2=OFF or L2=0 to disable the L2 cache for proper execution (default: L2 is ON)"
        python utils/kann_video_demo.py --help
        exit 0
    fi
done

if [[ $TARGET == 'mppa' ]]; then
    GENERATED_DIR=$2
    SOURCE_PATH=$3
    KANN_BIN_DIR=${KANN_BIN_DIR:=${KALRAY_TOOLCHAIN_DIR}/bin/}
    KANN_POCL_DIR=${KANN_POCL_DIR:=${KALRAY_TOOLCHAIN_DIR}/kvx-cos/lib/kv3-2/KAF/services}

    if [ -z $GENERATED_DIR ] || [ -z $SOURCE_PATH ]; then
        echo "${USAGE}"; exit 1;
    fi
    if [ -z $KALRAY_TOOLCHAIN_DIR ]; then
        echo "Please source Kalray(R) toolchain"; exit 1;
    fi
    if [ -z $L2 ] || [ $L2 == 1 ] || [ $L2 == "ON" ]; then
        run_with_L2cache "${@:4}" || exit 1
    elif [ $L2 == 0 ] || [ $L2 == "OFF" ]; then
        run_without_L2cache "${@:4}" || exit 1
    else
        echo "Wrong value for L2: 0, 1, ON, OFF is allowed, get L2=${L2}"
        echo "$USAGE"
    fi

elif [[ $TARGET == 'cpu' ]]; then
    YAML_FILE=$2
    SOURCE_PATH=$3
    if [ -z "$YAML_FILE" ] || [ -z "$SOURCE_PATH" ]; then
        echo "${USAGE}"; exit 1;
    fi

    echo "python utils/onnx_tf_video_demo.py $YAML_FILE $SOURCE_PATH ${@:4}"
    python "$PWD/utils/onnx_tf_video_demo.py" "$YAML_FILE" "$SOURCE_PATH" "${@:4}" || exit 1
else
    echo "${USAGE}"
    exit 1
fi

exit 0
